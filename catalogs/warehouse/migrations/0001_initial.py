# -*- coding: utf-8 -*-
# Generated by Django 1.11.11 on 2020-06-02 08:53
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('product', '0001_initial'),
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        #('clients', '0002_client_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, verbose_name='Name')),
                ('address', models.CharField(max_length=250, verbose_name='Address')),
                ('total_bays', models.IntegerField(default=0, verbose_name='Truck Bays')),
                ('service_interval', models.FloatField(default=0, verbose_name='Service Interval')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
            ],
            options={
                'verbose_name': 'Branch',
                'verbose_name_plural': 'Branch',
            },
        ),
        migrations.CreateModel(
            name='Warehouse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=250, verbose_name='Code')),
                ('description', models.CharField(blank=True, max_length=255, verbose_name='Description')),
                ('rows', models.PositiveIntegerField(default=0, verbose_name='Rows')),
                ('depth_levels', models.PositiveIntegerField(default=0, verbose_name='Depth Levels')),
                ('height_levels', models.PositiveIntegerField(default=0, verbose_name='Height Levels')),
                ('sections_per_row', models.PositiveIntegerField(default=0, verbose_name='Sections per Row')),
            ],
            options={
                'verbose_name': 'Warehouse',
                'verbose_name_plural': 'Warehouses',
            },
        ),
        migrations.CreateModel(
            name='WarehouseDepthLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('index', models.PositiveIntegerField()),
                ('depth_mts', models.FloatField(default=0, verbose_name='Depth MTS')),
                ('height_mts', models.FloatField(default=0, verbose_name='Height MTS')),
                ('width_mts', models.FloatField(default=0, verbose_name='Width MTS')),
                ('weight_kg', models.FloatField(default=0, verbose_name='Weight KG')),
                ('location_volume', models.FloatField(default=0, verbose_name='Location Volume')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseHeightLevel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('index', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseInventory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_kg', models.FloatField(default=0, verbose_name='Total Kg')),
                ('total_boxes', models.PositiveIntegerField(default=0, verbose_name='Total Boxes')),
                ('exp_date', models.DateField(blank=True, max_length=100, verbose_name='Expiration Date')),
                ('rack', models.CharField(blank=True, max_length=250, null=True, verbose_name='Rack Number')),
                ('retained_boxes', models.IntegerField(blank=True, null=True, verbose_name='Retained Qty')),
                ('available_gross_weight', models.FloatField(default=0, verbose_name='Gross Weight')),
                ('available_net_weight', models.FloatField(default=0, verbose_name='Net Weight')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Blocked Inventory')),
                ('available_total_boxes', models.PositiveIntegerField(default=0, verbose_name='Available Total Boxes')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='clients.Client')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseInventoryLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_kg', models.FloatField(default=0, verbose_name='Total Kg')),
                ('total_boxes', models.PositiveIntegerField(default=0, verbose_name='Total Boxes')),
                ('retained_boxes', models.IntegerField(blank=True, null=True, verbose_name='Retained Qty')),
                ('adjust_reason', models.CharField(blank=True, max_length=100, null=True, verbose_name='Motivo del Ajuste')),
                ('description', models.CharField(blank=True, max_length=200, null=True, verbose_name='Ob Servaciones')),
                ('created_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('warehouse_inventory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.WarehouseInventory')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseLocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_number', models.PositiveIntegerField()),
                ('total_stored_kg', models.FloatField(default=0, verbose_name='Total Stored Kg')),
                ('total_stored_boxes', models.PositiveIntegerField(default=0, verbose_name='Total Stored Boxes')),
                ('total_retained_boxes', models.PositiveIntegerField(default=0, verbose_name='Total Retained Boxes')),
                ('is_locked', models.BooleanField(default=False, verbose_name='Blocked Location')),
                ('available_weight', models.FloatField(default=0, verbose_name='Available Weight')),
                ('available_volume', models.FloatField(default=0, verbose_name='Available Volume')),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.Warehouse')),
            ],
            options={
                'verbose_name': 'Warehouse Location',
                'verbose_name_plural': 'Warehouse Locations',
            },
        ),
        migrations.CreateModel(
            name='WarehouseRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250, null=True)),
                ('index', models.PositiveIntegerField()),
                ('warehouse', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.Warehouse')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseSection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.PositiveIntegerField()),
                ('row', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='warehouse.WarehouseRow')),
            ],
        ),
        migrations.CreateModel(
            name='WarehouseTruckBays',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('time_slot', models.DateTimeField(verbose_name='Time')),
                ('bay', models.IntegerField(default=0, verbose_name='Truck Bay')),
                ('loading', models.BooleanField(default=True, verbose_name='Contain Vehicle is loading')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated At')),
                ('branch', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='warehouse.Branch')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.ContentType')),
            ],
            options={
                'verbose_name': 'Warehouse Truck Bays',
                'verbose_name_plural': 'Warehouse Truck Bays',
            },
        ),
    ]
